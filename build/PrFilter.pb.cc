// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PrFilter.proto

#include "PrFilter.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace PrFilter {
PROTOBUF_CONSTEXPR cbc::cbc(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.c_)*/{}
  , /*decltype(_impl_.bc_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct cbcDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cbcDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~cbcDefaultTypeInternal() {}
  union {
    cbc _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cbcDefaultTypeInternal _cbc_default_instance_;
PROTOBUF_CONSTEXPR key_re_d::key_re_d(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ck_)*/{}
  , /*decltype(_impl_._ck_cached_byte_size_)*/{0}
  , /*decltype(_impl_.p2_)*/{}
  , /*decltype(_impl_._p2_cached_byte_size_)*/{0}
  , /*decltype(_impl_.p2_plus_)*/{}
  , /*decltype(_impl_._p2_plus_cached_byte_size_)*/{0}
  , /*decltype(_impl_.kx_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.key_phi_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.key_phi_plus_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct key_re_dDefaultTypeInternal {
  PROTOBUF_CONSTEXPR key_re_dDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~key_re_dDefaultTypeInternal() {}
  union {
    key_re_d _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 key_re_dDefaultTypeInternal _key_re_d_default_instance_;
PROTOBUF_CONSTEXPR SetupEmmtRequest::SetupEmmtRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.value_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetupEmmtRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetupEmmtRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetupEmmtRequestDefaultTypeInternal() {}
  union {
    SetupEmmtRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetupEmmtRequestDefaultTypeInternal _SetupEmmtRequest_default_instance_;
PROTOBUF_CONSTEXPR SetupEmmtRespone::SetupEmmtRespone(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.code_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetupEmmtResponeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetupEmmtResponeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetupEmmtResponeDefaultTypeInternal() {}
  union {
    SetupEmmtRespone _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetupEmmtResponeDefaultTypeInternal _SetupEmmtRespone_default_instance_;
PROTOBUF_CONSTEXPR SetupXsetRequest::SetupXsetRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.xset_v_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetupXsetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetupXsetRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetupXsetRequestDefaultTypeInternal() {}
  union {
    SetupXsetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetupXsetRequestDefaultTypeInternal _SetupXsetRequest_default_instance_;
PROTOBUF_CONSTEXPR SetupXsetRespone::SetupXsetRespone(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.code_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SetupXsetResponeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetupXsetResponeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetupXsetResponeDefaultTypeInternal() {}
  union {
    SetupXsetRespone _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetupXsetResponeDefaultTypeInternal _SetupXsetRespone_default_instance_;
PROTOBUF_CONSTEXPR SearchRequest::SearchRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tokp_vec_)*/{}
  , /*decltype(_impl_.tokp_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.k_w12_enc_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SearchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchRequestDefaultTypeInternal() {}
  union {
    SearchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchRequestDefaultTypeInternal _SearchRequest_default_instance_;
PROTOBUF_CONSTEXPR SearchRespone::SearchRespone(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.code_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SearchResponeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchResponeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchResponeDefaultTypeInternal() {}
  union {
    SearchRespone _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchResponeDefaultTypeInternal _SearchRespone_default_instance_;
}  // namespace PrFilter
static ::_pb::Metadata file_level_metadata_PrFilter_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_PrFilter_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_PrFilter_2eproto = nullptr;

const uint32_t TableStruct_PrFilter_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PrFilter::cbc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PrFilter::cbc, _impl_.c_),
  PROTOBUF_FIELD_OFFSET(::PrFilter::cbc, _impl_.bc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PrFilter::key_re_d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PrFilter::key_re_d, _impl_.kx_),
  PROTOBUF_FIELD_OFFSET(::PrFilter::key_re_d, _impl_.ck_),
  PROTOBUF_FIELD_OFFSET(::PrFilter::key_re_d, _impl_.p2_),
  PROTOBUF_FIELD_OFFSET(::PrFilter::key_re_d, _impl_.p2_plus_),
  PROTOBUF_FIELD_OFFSET(::PrFilter::key_re_d, _impl_.key_phi_),
  PROTOBUF_FIELD_OFFSET(::PrFilter::key_re_d, _impl_.key_phi_plus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PrFilter::SetupEmmtRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PrFilter::SetupEmmtRequest, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::PrFilter::SetupEmmtRequest, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PrFilter::SetupEmmtRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PrFilter::SetupEmmtRespone, _impl_.code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PrFilter::SetupXsetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PrFilter::SetupXsetRequest, _impl_.xset_v_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PrFilter::SetupXsetRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PrFilter::SetupXsetRespone, _impl_.code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PrFilter::SearchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PrFilter::SearchRequest, _impl_.tokp_),
  PROTOBUF_FIELD_OFFSET(::PrFilter::SearchRequest, _impl_.k_w12_enc_),
  PROTOBUF_FIELD_OFFSET(::PrFilter::SearchRequest, _impl_.tokp_vec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PrFilter::SearchRespone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PrFilter::SearchRespone, _impl_.code_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::PrFilter::cbc)},
  { 8, -1, -1, sizeof(::PrFilter::key_re_d)},
  { 20, -1, -1, sizeof(::PrFilter::SetupEmmtRequest)},
  { 28, -1, -1, sizeof(::PrFilter::SetupEmmtRespone)},
  { 35, -1, -1, sizeof(::PrFilter::SetupXsetRequest)},
  { 42, -1, -1, sizeof(::PrFilter::SetupXsetRespone)},
  { 49, -1, -1, sizeof(::PrFilter::SearchRequest)},
  { 58, -1, -1, sizeof(::PrFilter::SearchRespone)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::PrFilter::_cbc_default_instance_._instance,
  &::PrFilter::_key_re_d_default_instance_._instance,
  &::PrFilter::_SetupEmmtRequest_default_instance_._instance,
  &::PrFilter::_SetupEmmtRespone_default_instance_._instance,
  &::PrFilter::_SetupXsetRequest_default_instance_._instance,
  &::PrFilter::_SetupXsetRespone_default_instance_._instance,
  &::PrFilter::_SearchRequest_default_instance_._instance,
  &::PrFilter::_SearchRespone_default_instance_._instance,
};

const char descriptor_table_protodef_PrFilter_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016PrFilter.proto\022\010PrFilter\"\034\n\003cbc\022\t\n\001c\030\001"
  " \003(\014\022\n\n\002bc\030\002 \003(\014\"f\n\010key_re_d\022\n\n\002kx\030\001 \001(\t"
  "\022\n\n\002ck\030\002 \003(\005\022\n\n\002p2\030\003 \003(\005\022\017\n\007p2_plus\030\004 \003("
  "\005\022\017\n\007key_phi\030\005 \001(\t\022\024\n\014key_phi_plus\030\006 \001(\t"
  "\"=\n\020SetupEmmtRequest\022\013\n\003key\030\001 \001(\014\022\034\n\005val"
  "ue\030\002 \001(\0132\r.PrFilter.cbc\" \n\020SetupEmmtResp"
  "one\022\014\n\004code\030\001 \001(\005\"\"\n\020SetupXsetRequest\022\016\n"
  "\006xset_v\030\001 \001(\014\" \n\020SetupXsetRespone\022\014\n\004cod"
  "e\030\001 \001(\005\"V\n\rSearchRequest\022\014\n\004tokp\030\001 \001(\t\022\021"
  "\n\tk_w12_enc\030\002 \001(\t\022$\n\010tokp_vec\030\003 \003(\0132\022.Pr"
  "Filter.key_re_d\"\035\n\rSearchRespone\022\014\n\004code"
  "\030\001 \001(\0052\335\001\n\017PrFilterService\022E\n\tSetupEmmt\022"
  "\032.PrFilter.SetupEmmtRequest\032\032.PrFilter.S"
  "etupEmmtRespone\"\000\022E\n\tSetupXset\022\032.PrFilte"
  "r.SetupXsetRequest\032\032.PrFilter.SetupXsetR"
  "espone\"\000\022<\n\006Search\022\027.PrFilter.SearchRequ"
  "est\032\027.PrFilter.SearchRespone\"\000b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_PrFilter_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_PrFilter_2eproto = {
    false, false, 678, descriptor_table_protodef_PrFilter_2eproto,
    "PrFilter.proto",
    &descriptor_table_PrFilter_2eproto_once, nullptr, 0, 8,
    schemas, file_default_instances, TableStruct_PrFilter_2eproto::offsets,
    file_level_metadata_PrFilter_2eproto, file_level_enum_descriptors_PrFilter_2eproto,
    file_level_service_descriptors_PrFilter_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_PrFilter_2eproto_getter() {
  return &descriptor_table_PrFilter_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_PrFilter_2eproto(&descriptor_table_PrFilter_2eproto);
namespace PrFilter {

// ===================================================================

class cbc::_Internal {
 public:
};

cbc::cbc(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PrFilter.cbc)
}
cbc::cbc(const cbc& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  cbc* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.c_){from._impl_.c_}
    , decltype(_impl_.bc_){from._impl_.bc_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PrFilter.cbc)
}

inline void cbc::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.c_){arena}
    , decltype(_impl_.bc_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

cbc::~cbc() {
  // @@protoc_insertion_point(destructor:PrFilter.cbc)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void cbc::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.c_.~RepeatedPtrField();
  _impl_.bc_.~RepeatedPtrField();
}

void cbc::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void cbc::Clear() {
// @@protoc_insertion_point(message_clear_start:PrFilter.cbc)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.c_.Clear();
  _impl_.bc_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* cbc::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes c = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_c();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated bytes bc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_bc();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* cbc::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PrFilter.cbc)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes c = 1;
  for (int i = 0, n = this->_internal_c_size(); i < n; i++) {
    const auto& s = this->_internal_c(i);
    target = stream->WriteBytes(1, s, target);
  }

  // repeated bytes bc = 2;
  for (int i = 0, n = this->_internal_bc_size(); i < n; i++) {
    const auto& s = this->_internal_bc(i);
    target = stream->WriteBytes(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PrFilter.cbc)
  return target;
}

size_t cbc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PrFilter.cbc)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes c = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.c_.size());
  for (int i = 0, n = _impl_.c_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.c_.Get(i));
  }

  // repeated bytes bc = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.bc_.size());
  for (int i = 0, n = _impl_.bc_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.bc_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData cbc::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    cbc::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*cbc::GetClassData() const { return &_class_data_; }


void cbc::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<cbc*>(&to_msg);
  auto& from = static_cast<const cbc&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PrFilter.cbc)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.c_.MergeFrom(from._impl_.c_);
  _this->_impl_.bc_.MergeFrom(from._impl_.bc_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void cbc::CopyFrom(const cbc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PrFilter.cbc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cbc::IsInitialized() const {
  return true;
}

void cbc::InternalSwap(cbc* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.c_.InternalSwap(&other->_impl_.c_);
  _impl_.bc_.InternalSwap(&other->_impl_.bc_);
}

::PROTOBUF_NAMESPACE_ID::Metadata cbc::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PrFilter_2eproto_getter, &descriptor_table_PrFilter_2eproto_once,
      file_level_metadata_PrFilter_2eproto[0]);
}

// ===================================================================

class key_re_d::_Internal {
 public:
};

key_re_d::key_re_d(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PrFilter.key_re_d)
}
key_re_d::key_re_d(const key_re_d& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  key_re_d* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ck_){from._impl_.ck_}
    , /*decltype(_impl_._ck_cached_byte_size_)*/{0}
    , decltype(_impl_.p2_){from._impl_.p2_}
    , /*decltype(_impl_._p2_cached_byte_size_)*/{0}
    , decltype(_impl_.p2_plus_){from._impl_.p2_plus_}
    , /*decltype(_impl_._p2_plus_cached_byte_size_)*/{0}
    , decltype(_impl_.kx_){}
    , decltype(_impl_.key_phi_){}
    , decltype(_impl_.key_phi_plus_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.kx_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.kx_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_kx().empty()) {
    _this->_impl_.kx_.Set(from._internal_kx(), 
      _this->GetArenaForAllocation());
  }
  _impl_.key_phi_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_phi_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key_phi().empty()) {
    _this->_impl_.key_phi_.Set(from._internal_key_phi(), 
      _this->GetArenaForAllocation());
  }
  _impl_.key_phi_plus_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_phi_plus_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key_phi_plus().empty()) {
    _this->_impl_.key_phi_plus_.Set(from._internal_key_phi_plus(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:PrFilter.key_re_d)
}

inline void key_re_d::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ck_){arena}
    , /*decltype(_impl_._ck_cached_byte_size_)*/{0}
    , decltype(_impl_.p2_){arena}
    , /*decltype(_impl_._p2_cached_byte_size_)*/{0}
    , decltype(_impl_.p2_plus_){arena}
    , /*decltype(_impl_._p2_plus_cached_byte_size_)*/{0}
    , decltype(_impl_.kx_){}
    , decltype(_impl_.key_phi_){}
    , decltype(_impl_.key_phi_plus_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.kx_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.kx_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.key_phi_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_phi_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.key_phi_plus_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_phi_plus_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

key_re_d::~key_re_d() {
  // @@protoc_insertion_point(destructor:PrFilter.key_re_d)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void key_re_d::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ck_.~RepeatedField();
  _impl_.p2_.~RepeatedField();
  _impl_.p2_plus_.~RepeatedField();
  _impl_.kx_.Destroy();
  _impl_.key_phi_.Destroy();
  _impl_.key_phi_plus_.Destroy();
}

void key_re_d::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void key_re_d::Clear() {
// @@protoc_insertion_point(message_clear_start:PrFilter.key_re_d)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ck_.Clear();
  _impl_.p2_.Clear();
  _impl_.p2_plus_.Clear();
  _impl_.kx_.ClearToEmpty();
  _impl_.key_phi_.ClearToEmpty();
  _impl_.key_phi_plus_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* key_re_d::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string kx = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_kx();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "PrFilter.key_re_d.kx"));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 ck = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_ck(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_ck(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 p2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_p2(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_p2(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 p2_plus = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_p2_plus(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_p2_plus(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string key_phi = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_key_phi();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "PrFilter.key_re_d.key_phi"));
        } else
          goto handle_unusual;
        continue;
      // string key_phi_plus = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_key_phi_plus();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "PrFilter.key_re_d.key_phi_plus"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* key_re_d::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PrFilter.key_re_d)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string kx = 1;
  if (!this->_internal_kx().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_kx().data(), static_cast<int>(this->_internal_kx().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PrFilter.key_re_d.kx");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_kx(), target);
  }

  // repeated int32 ck = 2;
  {
    int byte_size = _impl_._ck_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_ck(), byte_size, target);
    }
  }

  // repeated int32 p2 = 3;
  {
    int byte_size = _impl_._p2_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_p2(), byte_size, target);
    }
  }

  // repeated int32 p2_plus = 4;
  {
    int byte_size = _impl_._p2_plus_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          4, _internal_p2_plus(), byte_size, target);
    }
  }

  // string key_phi = 5;
  if (!this->_internal_key_phi().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_phi().data(), static_cast<int>(this->_internal_key_phi().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PrFilter.key_re_d.key_phi");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_key_phi(), target);
  }

  // string key_phi_plus = 6;
  if (!this->_internal_key_phi_plus().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key_phi_plus().data(), static_cast<int>(this->_internal_key_phi_plus().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PrFilter.key_re_d.key_phi_plus");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_key_phi_plus(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PrFilter.key_re_d)
  return target;
}

size_t key_re_d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PrFilter.key_re_d)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 ck = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.ck_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._ck_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 p2 = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.p2_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._p2_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 p2_plus = 4;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.p2_plus_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._p2_plus_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string kx = 1;
  if (!this->_internal_kx().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_kx());
  }

  // string key_phi = 5;
  if (!this->_internal_key_phi().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_phi());
  }

  // string key_phi_plus = 6;
  if (!this->_internal_key_phi_plus().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key_phi_plus());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData key_re_d::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    key_re_d::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*key_re_d::GetClassData() const { return &_class_data_; }


void key_re_d::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<key_re_d*>(&to_msg);
  auto& from = static_cast<const key_re_d&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PrFilter.key_re_d)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.ck_.MergeFrom(from._impl_.ck_);
  _this->_impl_.p2_.MergeFrom(from._impl_.p2_);
  _this->_impl_.p2_plus_.MergeFrom(from._impl_.p2_plus_);
  if (!from._internal_kx().empty()) {
    _this->_internal_set_kx(from._internal_kx());
  }
  if (!from._internal_key_phi().empty()) {
    _this->_internal_set_key_phi(from._internal_key_phi());
  }
  if (!from._internal_key_phi_plus().empty()) {
    _this->_internal_set_key_phi_plus(from._internal_key_phi_plus());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void key_re_d::CopyFrom(const key_re_d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PrFilter.key_re_d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool key_re_d::IsInitialized() const {
  return true;
}

void key_re_d::InternalSwap(key_re_d* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ck_.InternalSwap(&other->_impl_.ck_);
  _impl_.p2_.InternalSwap(&other->_impl_.p2_);
  _impl_.p2_plus_.InternalSwap(&other->_impl_.p2_plus_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.kx_, lhs_arena,
      &other->_impl_.kx_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_phi_, lhs_arena,
      &other->_impl_.key_phi_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_phi_plus_, lhs_arena,
      &other->_impl_.key_phi_plus_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata key_re_d::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PrFilter_2eproto_getter, &descriptor_table_PrFilter_2eproto_once,
      file_level_metadata_PrFilter_2eproto[1]);
}

// ===================================================================

class SetupEmmtRequest::_Internal {
 public:
  static const ::PrFilter::cbc& value(const SetupEmmtRequest* msg);
};

const ::PrFilter::cbc&
SetupEmmtRequest::_Internal::value(const SetupEmmtRequest* msg) {
  return *msg->_impl_.value_;
}
SetupEmmtRequest::SetupEmmtRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PrFilter.SetupEmmtRequest)
}
SetupEmmtRequest::SetupEmmtRequest(const SetupEmmtRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetupEmmtRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , decltype(_impl_.value_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::PrFilter::cbc(*from._impl_.value_);
  }
  // @@protoc_insertion_point(copy_constructor:PrFilter.SetupEmmtRequest)
}

inline void SetupEmmtRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , decltype(_impl_.value_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetupEmmtRequest::~SetupEmmtRequest() {
  // @@protoc_insertion_point(destructor:PrFilter.SetupEmmtRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetupEmmtRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
  if (this != internal_default_instance()) delete _impl_.value_;
}

void SetupEmmtRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetupEmmtRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PrFilter.SetupEmmtRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.value_ != nullptr) {
    delete _impl_.value_;
  }
  _impl_.value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetupEmmtRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .PrFilter.cbc value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetupEmmtRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PrFilter.SetupEmmtRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (!this->_internal_key().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_key(), target);
  }

  // .PrFilter.cbc value = 2;
  if (this->_internal_has_value()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PrFilter.SetupEmmtRequest)
  return target;
}

size_t SetupEmmtRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PrFilter.SetupEmmtRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_key());
  }

  // .PrFilter.cbc value = 2;
  if (this->_internal_has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetupEmmtRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetupEmmtRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetupEmmtRequest::GetClassData() const { return &_class_data_; }


void SetupEmmtRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetupEmmtRequest*>(&to_msg);
  auto& from = static_cast<const SetupEmmtRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PrFilter.SetupEmmtRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (from._internal_has_value()) {
    _this->_internal_mutable_value()->::PrFilter::cbc::MergeFrom(
        from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetupEmmtRequest::CopyFrom(const SetupEmmtRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PrFilter.SetupEmmtRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupEmmtRequest::IsInitialized() const {
  return true;
}

void SetupEmmtRequest::InternalSwap(SetupEmmtRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
  swap(_impl_.value_, other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetupEmmtRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PrFilter_2eproto_getter, &descriptor_table_PrFilter_2eproto_once,
      file_level_metadata_PrFilter_2eproto[2]);
}

// ===================================================================

class SetupEmmtRespone::_Internal {
 public:
};

SetupEmmtRespone::SetupEmmtRespone(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PrFilter.SetupEmmtRespone)
}
SetupEmmtRespone::SetupEmmtRespone(const SetupEmmtRespone& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetupEmmtRespone* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.code_ = from._impl_.code_;
  // @@protoc_insertion_point(copy_constructor:PrFilter.SetupEmmtRespone)
}

inline void SetupEmmtRespone::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.code_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetupEmmtRespone::~SetupEmmtRespone() {
  // @@protoc_insertion_point(destructor:PrFilter.SetupEmmtRespone)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetupEmmtRespone::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetupEmmtRespone::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetupEmmtRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:PrFilter.SetupEmmtRespone)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetupEmmtRespone::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetupEmmtRespone::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PrFilter.SetupEmmtRespone)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PrFilter.SetupEmmtRespone)
  return target;
}

size_t SetupEmmtRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PrFilter.SetupEmmtRespone)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetupEmmtRespone::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetupEmmtRespone::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetupEmmtRespone::GetClassData() const { return &_class_data_; }


void SetupEmmtRespone::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetupEmmtRespone*>(&to_msg);
  auto& from = static_cast<const SetupEmmtRespone&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PrFilter.SetupEmmtRespone)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetupEmmtRespone::CopyFrom(const SetupEmmtRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PrFilter.SetupEmmtRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupEmmtRespone::IsInitialized() const {
  return true;
}

void SetupEmmtRespone::InternalSwap(SetupEmmtRespone* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.code_, other->_impl_.code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetupEmmtRespone::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PrFilter_2eproto_getter, &descriptor_table_PrFilter_2eproto_once,
      file_level_metadata_PrFilter_2eproto[3]);
}

// ===================================================================

class SetupXsetRequest::_Internal {
 public:
};

SetupXsetRequest::SetupXsetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PrFilter.SetupXsetRequest)
}
SetupXsetRequest::SetupXsetRequest(const SetupXsetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetupXsetRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.xset_v_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.xset_v_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.xset_v_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_xset_v().empty()) {
    _this->_impl_.xset_v_.Set(from._internal_xset_v(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:PrFilter.SetupXsetRequest)
}

inline void SetupXsetRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.xset_v_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.xset_v_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.xset_v_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SetupXsetRequest::~SetupXsetRequest() {
  // @@protoc_insertion_point(destructor:PrFilter.SetupXsetRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetupXsetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.xset_v_.Destroy();
}

void SetupXsetRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetupXsetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PrFilter.SetupXsetRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xset_v_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetupXsetRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes xset_v = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_xset_v();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetupXsetRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PrFilter.SetupXsetRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes xset_v = 1;
  if (!this->_internal_xset_v().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_xset_v(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PrFilter.SetupXsetRequest)
  return target;
}

size_t SetupXsetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PrFilter.SetupXsetRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes xset_v = 1;
  if (!this->_internal_xset_v().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_xset_v());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetupXsetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetupXsetRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetupXsetRequest::GetClassData() const { return &_class_data_; }


void SetupXsetRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetupXsetRequest*>(&to_msg);
  auto& from = static_cast<const SetupXsetRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PrFilter.SetupXsetRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_xset_v().empty()) {
    _this->_internal_set_xset_v(from._internal_xset_v());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetupXsetRequest::CopyFrom(const SetupXsetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PrFilter.SetupXsetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupXsetRequest::IsInitialized() const {
  return true;
}

void SetupXsetRequest::InternalSwap(SetupXsetRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.xset_v_, lhs_arena,
      &other->_impl_.xset_v_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SetupXsetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PrFilter_2eproto_getter, &descriptor_table_PrFilter_2eproto_once,
      file_level_metadata_PrFilter_2eproto[4]);
}

// ===================================================================

class SetupXsetRespone::_Internal {
 public:
};

SetupXsetRespone::SetupXsetRespone(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PrFilter.SetupXsetRespone)
}
SetupXsetRespone::SetupXsetRespone(const SetupXsetRespone& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SetupXsetRespone* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.code_ = from._impl_.code_;
  // @@protoc_insertion_point(copy_constructor:PrFilter.SetupXsetRespone)
}

inline void SetupXsetRespone::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.code_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SetupXsetRespone::~SetupXsetRespone() {
  // @@protoc_insertion_point(destructor:PrFilter.SetupXsetRespone)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SetupXsetRespone::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetupXsetRespone::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SetupXsetRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:PrFilter.SetupXsetRespone)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetupXsetRespone::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetupXsetRespone::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PrFilter.SetupXsetRespone)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PrFilter.SetupXsetRespone)
  return target;
}

size_t SetupXsetRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PrFilter.SetupXsetRespone)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetupXsetRespone::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SetupXsetRespone::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetupXsetRespone::GetClassData() const { return &_class_data_; }


void SetupXsetRespone::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SetupXsetRespone*>(&to_msg);
  auto& from = static_cast<const SetupXsetRespone&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PrFilter.SetupXsetRespone)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetupXsetRespone::CopyFrom(const SetupXsetRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PrFilter.SetupXsetRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupXsetRespone::IsInitialized() const {
  return true;
}

void SetupXsetRespone::InternalSwap(SetupXsetRespone* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.code_, other->_impl_.code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetupXsetRespone::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PrFilter_2eproto_getter, &descriptor_table_PrFilter_2eproto_once,
      file_level_metadata_PrFilter_2eproto[5]);
}

// ===================================================================

class SearchRequest::_Internal {
 public:
};

SearchRequest::SearchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PrFilter.SearchRequest)
}
SearchRequest::SearchRequest(const SearchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SearchRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tokp_vec_){from._impl_.tokp_vec_}
    , decltype(_impl_.tokp_){}
    , decltype(_impl_.k_w12_enc_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.tokp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tokp_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tokp().empty()) {
    _this->_impl_.tokp_.Set(from._internal_tokp(), 
      _this->GetArenaForAllocation());
  }
  _impl_.k_w12_enc_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.k_w12_enc_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_k_w12_enc().empty()) {
    _this->_impl_.k_w12_enc_.Set(from._internal_k_w12_enc(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:PrFilter.SearchRequest)
}

inline void SearchRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tokp_vec_){arena}
    , decltype(_impl_.tokp_){}
    , decltype(_impl_.k_w12_enc_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.tokp_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.tokp_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.k_w12_enc_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.k_w12_enc_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SearchRequest::~SearchRequest() {
  // @@protoc_insertion_point(destructor:PrFilter.SearchRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SearchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tokp_vec_.~RepeatedPtrField();
  _impl_.tokp_.Destroy();
  _impl_.k_w12_enc_.Destroy();
}

void SearchRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PrFilter.SearchRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tokp_vec_.Clear();
  _impl_.tokp_.ClearToEmpty();
  _impl_.k_w12_enc_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string tokp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tokp();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "PrFilter.SearchRequest.tokp"));
        } else
          goto handle_unusual;
        continue;
      // string k_w12_enc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_k_w12_enc();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "PrFilter.SearchRequest.k_w12_enc"));
        } else
          goto handle_unusual;
        continue;
      // repeated .PrFilter.key_re_d tokp_vec = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tokp_vec(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PrFilter.SearchRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string tokp = 1;
  if (!this->_internal_tokp().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tokp().data(), static_cast<int>(this->_internal_tokp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PrFilter.SearchRequest.tokp");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tokp(), target);
  }

  // string k_w12_enc = 2;
  if (!this->_internal_k_w12_enc().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_k_w12_enc().data(), static_cast<int>(this->_internal_k_w12_enc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PrFilter.SearchRequest.k_w12_enc");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_k_w12_enc(), target);
  }

  // repeated .PrFilter.key_re_d tokp_vec = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tokp_vec_size()); i < n; i++) {
    const auto& repfield = this->_internal_tokp_vec(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PrFilter.SearchRequest)
  return target;
}

size_t SearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PrFilter.SearchRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PrFilter.key_re_d tokp_vec = 3;
  total_size += 1UL * this->_internal_tokp_vec_size();
  for (const auto& msg : this->_impl_.tokp_vec_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string tokp = 1;
  if (!this->_internal_tokp().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tokp());
  }

  // string k_w12_enc = 2;
  if (!this->_internal_k_w12_enc().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_k_w12_enc());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SearchRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchRequest::GetClassData() const { return &_class_data_; }


void SearchRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SearchRequest*>(&to_msg);
  auto& from = static_cast<const SearchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PrFilter.SearchRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tokp_vec_.MergeFrom(from._impl_.tokp_vec_);
  if (!from._internal_tokp().empty()) {
    _this->_internal_set_tokp(from._internal_tokp());
  }
  if (!from._internal_k_w12_enc().empty()) {
    _this->_internal_set_k_w12_enc(from._internal_k_w12_enc());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchRequest::CopyFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PrFilter.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRequest::IsInitialized() const {
  return true;
}

void SearchRequest::InternalSwap(SearchRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tokp_vec_.InternalSwap(&other->_impl_.tokp_vec_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.tokp_, lhs_arena,
      &other->_impl_.tokp_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.k_w12_enc_, lhs_arena,
      &other->_impl_.k_w12_enc_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PrFilter_2eproto_getter, &descriptor_table_PrFilter_2eproto_once,
      file_level_metadata_PrFilter_2eproto[6]);
}

// ===================================================================

class SearchRespone::_Internal {
 public:
};

SearchRespone::SearchRespone(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PrFilter.SearchRespone)
}
SearchRespone::SearchRespone(const SearchRespone& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SearchRespone* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.code_ = from._impl_.code_;
  // @@protoc_insertion_point(copy_constructor:PrFilter.SearchRespone)
}

inline void SearchRespone::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.code_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SearchRespone::~SearchRespone() {
  // @@protoc_insertion_point(destructor:PrFilter.SearchRespone)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SearchRespone::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SearchRespone::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SearchRespone::Clear() {
// @@protoc_insertion_point(message_clear_start:PrFilter.SearchRespone)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchRespone::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchRespone::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PrFilter.SearchRespone)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PrFilter.SearchRespone)
  return target;
}

size_t SearchRespone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PrFilter.SearchRespone)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchRespone::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SearchRespone::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchRespone::GetClassData() const { return &_class_data_; }


void SearchRespone::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SearchRespone*>(&to_msg);
  auto& from = static_cast<const SearchRespone&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PrFilter.SearchRespone)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchRespone::CopyFrom(const SearchRespone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PrFilter.SearchRespone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRespone::IsInitialized() const {
  return true;
}

void SearchRespone::InternalSwap(SearchRespone* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.code_, other->_impl_.code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchRespone::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_PrFilter_2eproto_getter, &descriptor_table_PrFilter_2eproto_once,
      file_level_metadata_PrFilter_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace PrFilter
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PrFilter::cbc*
Arena::CreateMaybeMessage< ::PrFilter::cbc >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PrFilter::cbc >(arena);
}
template<> PROTOBUF_NOINLINE ::PrFilter::key_re_d*
Arena::CreateMaybeMessage< ::PrFilter::key_re_d >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PrFilter::key_re_d >(arena);
}
template<> PROTOBUF_NOINLINE ::PrFilter::SetupEmmtRequest*
Arena::CreateMaybeMessage< ::PrFilter::SetupEmmtRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PrFilter::SetupEmmtRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::PrFilter::SetupEmmtRespone*
Arena::CreateMaybeMessage< ::PrFilter::SetupEmmtRespone >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PrFilter::SetupEmmtRespone >(arena);
}
template<> PROTOBUF_NOINLINE ::PrFilter::SetupXsetRequest*
Arena::CreateMaybeMessage< ::PrFilter::SetupXsetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PrFilter::SetupXsetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::PrFilter::SetupXsetRespone*
Arena::CreateMaybeMessage< ::PrFilter::SetupXsetRespone >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PrFilter::SetupXsetRespone >(arena);
}
template<> PROTOBUF_NOINLINE ::PrFilter::SearchRequest*
Arena::CreateMaybeMessage< ::PrFilter::SearchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PrFilter::SearchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::PrFilter::SearchRespone*
Arena::CreateMaybeMessage< ::PrFilter::SearchRespone >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PrFilter::SearchRespone >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
